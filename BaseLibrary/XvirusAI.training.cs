﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace Xvirus
{
    public partial class XvirusAI
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"VAR01", @"VAR01"),new InputOutputColumnPair(@"VAR02", @"VAR02"),new InputOutputColumnPair(@"VAR03", @"VAR03"),new InputOutputColumnPair(@"VAR04", @"VAR04"),new InputOutputColumnPair(@"VAR05", @"VAR05"),new InputOutputColumnPair(@"VAR06", @"VAR06"),new InputOutputColumnPair(@"VAR07", @"VAR07"),new InputOutputColumnPair(@"VAR08", @"VAR08"),new InputOutputColumnPair(@"VAR09", @"VAR09"),new InputOutputColumnPair(@"VAR10", @"VAR10"),new InputOutputColumnPair(@"VAR11", @"VAR11"),new InputOutputColumnPair(@"VAR12", @"VAR12"),new InputOutputColumnPair(@"VAR13", @"VAR13"),new InputOutputColumnPair(@"VAR14", @"VAR14"),new InputOutputColumnPair(@"VAR15", @"VAR15"),new InputOutputColumnPair(@"VAR16", @"VAR16")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"VAR01",@"VAR02",@"VAR03",@"VAR04",@"VAR05",@"VAR06",@"VAR07",@"VAR08",@"VAR09",@"VAR10",@"VAR11",@"VAR12",@"VAR13",@"VAR14",@"VAR15",@"VAR16"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@"MALWARE",inputColumnName:@"MALWARE"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.OneVersusAll(binaryEstimator:mlContext.BinaryClassification.Trainers.FastTree(new FastTreeBinaryTrainer.Options(){NumberOfLeaves=4,MinimumExampleCountPerLeaf=30,NumberOfTrees=104,MaximumBinCountPerFeature=32,FeatureFraction=0.927959839610103,LearningRate=0.999999776672986,LabelColumnName=@"MALWARE",FeatureColumnName=@"Features"}),labelColumnName: @"MALWARE"))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@"PredictedLabel",inputColumnName:@"PredictedLabel"));

            return pipeline;
        }
    }
}
